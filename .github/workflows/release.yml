name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: commayte-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: commayte-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: commayte-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: commayte-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Install OpenSSL dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --bin commayte

      - name: Rename binary
        run: |
          mkdir -p out
          cp target/${{ matrix.target }}/release/commayte out/${{ matrix.binary_name }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: out/${{ matrix.binary_name }}
          if-no-files-found: error
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Create install script
        run: |
          cp scripts/install.sh install.sh
          chmod +x install.sh

      - name: Create uninstall script
        run: |
          cp scripts/uninstall.sh uninstall.sh
          chmod +x uninstall.sh

      - name: Create release archive
        run: |
          tar -czf commayte-${{ github.ref_name }}.tar.gz \
            commayte-linux-x86_64 \
            commayte-macos-x86_64 \
            commayte-macos-arm64 \
            commayte-windows-x86_64.exe \
            install.sh \
            uninstall.sh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            commayte-${{ github.ref_name }}.tar.gz
            commayte-linux-x86_64
            commayte-macos-x86_64
            commayte-macos-arm64
            commayte-windows-x86_64.exe
            install.sh
            uninstall.sh
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # Use a personal token with `repo` scope
